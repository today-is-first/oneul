<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="store.oneul.mvc.challenge.dao.ChallengeDAO">

    <!-- SELECT ONE -->
    <!-- 챌린지 상세 조회 + 방장 nickname + 로그인 유저의 success_day -->
    <select id="getMyChallenge" parameterType="map" resultType="ChallengeDTO">
		SELECT 
		    c.challenge_id,
		    c.name,
		    c.owner_id,
		    c.category_id,
		    c.description,
		    c.total_day,
		    c.goal_day,
		    c.is_challenge,
		    c.is_public,
		    c.room_password,
		    c.start_date,
		    c.end_date,
		    c.entry_fee,
		    c.created_at,
		    u.nickname AS owner_nickname,
		    cu.success_day,
		
		    (
		        SELECT COUNT(*) 
		        FROM challenge_user cu2 
		        WHERE cu2.challenge_id = c.challenge_id
		    ) AS participant_count
		
		FROM challenge c
		JOIN user u ON c.owner_id = u.user_id
		JOIN challenge_user cu 
		    ON cu.challenge_id = c.challenge_id AND cu.user_id = #{loginUserId}
		WHERE c.challenge_id = #{challengeId}
    </select>

    <!-- SELECT ALL -->
    <select id="getChallenges" resultType="ChallengeDTO">
        SELECT 
        	c.*, 
        	u.nickname AS owner_nickname
         FROM challenge c
         JOIN user u ON c.owner_id = u.user_id
        ORDER BY created_at DESC
    </select>

    <!-- INSERT -->
    <insert id="insertChallenge" parameterType="ChallengeDTO">
        INSERT INTO challenge (
            name, owner_id, category_id, description,
            total_day, goal_day, is_challenge, is_public,
            room_password, start_date, end_date, entry_fee
        ) VALUES (
            #{name}, #{ownerId}, #{categoryId}, #{description},
            #{totalDay}, #{goalDay}, #{isChallenge}, #{isPublic},
            #{roomPassword}, #{startDate}, #{endDate}, #{entryFee}
        )
    </insert>

    <!-- UPDATE -->
    <update id="updateChallenge" parameterType="ChallengeDTO">
        UPDATE challenge
        SET name = #{name},
            category_id = #{categoryId},
            description = #{description},
            total_day = #{totalDay},
            goal_day = #{goalDay},
            is_challenge = #{isChallenge},
            is_public = #{isPublic},
            room_password = #{roomPassword},
            start_date = #{startDate},
            end_date = #{endDate},
            entry_fee = #{entryFee}
        WHERE challenge_id = #{challengeId}
    </update>

    <!-- DELETE -->
    <delete id="deleteChallenge" parameterType="long">
        DELETE FROM challenge
        WHERE challenge_id = #{challengeId}
    </delete>

    <select id="getSubscribedChallenges" parameterType="long" resultType="ChallengeDTO">
        SELECT c.*
        FROM challenge c
        JOIN challenge_user cu ON c.challenge_id = cu.challenge_id
        WHERE cu.user_id = #{userId}
        AND c.challenge_status = 'IN_PROGRESS'
    </select>
    
    <select id="getCommunityChallenges" resultType="ChallengeDTO">
        SELECT 
        	c.*, 
        	u.nickname AS owner_nickname
         FROM challenge c
         JOIN user u ON c.owner_id = u.user_id
        WHERE is_public = 1
        ORDER BY created_at DESC
    </select>
    
	<select id="getChallengeById" resultType="ChallengeDTO">
	  SELECT * FROM challenge WHERE challenge_id = #{challengeId}
	</select>
	
	
    <insert id="insertChallengeUser" parameterType="ChallengeUserDTO">
        INSERT INTO challenge_user (
            challenge_id,
            user_id,
            success_day,
            is_refunded,
            refund_amount
        ) VALUES (
            #{challengeId},
            #{userId},
            #{successDay},
            #{isRefunded},
            #{refundAmount}
        )
    </insert>
    
    <select id="getRoomPassword" resultType="String" parameterType="long">
	    SELECT room_password
	    FROM challenge
	    WHERE challenge_id = #{challengeId}
	      AND deleted_at IS NULL
	  </select>
	    

</mapper>
